1. Who checked out the book 'The Hobbit'?

SELECT member.name 
FROM book, checkout_item, member 
WHERE book.id = checkout_item.book_id 
AND member.id = checkout_item.member_id 
AND book.title = 'The Hobbit';

==>  Anand Beck


2. How many people have not checked out anything?

SELECT COUNT (member.id) 
FROM member 
LEFT JOIN checkout_item 
ON checkout_item.member_id = member.id 
WHERE checkout_item.member_id IS NULL;

==>  37


3. What books and movies aren't checked out?\

Books:
SELECT * FROM book 
WHERE NOT EXISTS (
SELECT NULL FROM checkout_item 
WHERE checkout_item.book_id = book.id);

==>  	2|Fellowship of the Ring
	6|1984
	7|Tom Sawyer
	8|Catcher in the Rye
	9|To Kill a Mockingbird
	10|Domain Driven Design

Movies:
SELECT * FROM movie 
WHERE NOT EXISTS (
SELECT NULL FROM checkout_item 
WHERE checkout_item.movie_id = movie.id);

==>6|Thin Red Line
	7|Crouching Tiger, Hidden Dragon
	8|Lawrence of Arabia
	9|Office Space


4. Add the book 'The Pragmatic Programmer', and add yourself as a member. Check out 'The Pragmatic Programmer'. Use your query from question 1 to verify that you have checked it out. Also, provide the SQL used to update the database.

INSERT INTO book (id, title) 
VALUES (11, 'The Pragmatic Programmer');

INSERT INTO member (id, name) 
VALUES (43, 'Lindsay Wilson');

INSERT INTO checkout_item (member_id, book_id) VALUES (
   ...> (SELECT member.id FROM member WHERE member.id = 43),
   ...> (SELECT book.id FROM book WHERE book.id = 11)
   ...> );

SELECT member.name 
FROM book, checkout_item, member 
WHERE book.id = checkout_item.book_id 
AND member.id = checkout_item.member_id 
AND book.title = 'The Pragmatic Programmer';

==>  'Lindsay Wilson'


5. Who has checked out more that 1 item?

SELECT count_book, count_movie, name
   ...> FROM (
   ...> SELECT COUNT(checkout_item.book_id) AS count_book, COUNT(checkout_item.movie_id) AS count_movie, checkout_item.member_id, member.name FROM checkout_item, member
   ...> WHERE member.id = checkout_item.member_id
   ...> GROUP BY checkout_item.member_id)
   ...> WHERE (count_book > 1 OR count_movie > 1) OR (count_book = 1 AND count_movie = 1);


==>  	2|1|Anand Beck
	1|2|Frank Smith
